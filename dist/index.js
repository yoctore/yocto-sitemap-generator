/* yocto-sitemap-generator - Module that generate sitemap.xml - V0.1.0 */
"use strict";function SitemapGenerator(a){this.logger=a,this.config={},this.schema=require("./modules/schema")(a),this.generator=require("./modules/generator")(a),this.factory=require("./modules/factory")(a)}var logger=require("yocto-logger"),_=require("lodash"),utils=require("yocto-utils"),Q=require("q");SitemapGenerator.prototype.load=function(a){var b=Q.defer();return this.schema.validate(a,"load").then(function(a){this.config=a,this.logger.info("[ SitemapGenerator.load ] - config load with success"),b.resolve(a)}.bind(this)).catch(function(a){this.logger.error("[ SitemapGenerator.load ] - error when loading module"),b.reject(a)}),b.promise},SitemapGenerator.prototype.generate=function(){var a=Q.defer();return this.logger.info("[ SitemapGenerator.generate ] - generation of xml by crawler will start  with options : "+utils.obj.inspect(this.config.generator)),this.generator.process(this.config.generator).then(function(b){a.resolve(b)}).catch(function(b){a.reject(b)}),a.promise},SitemapGenerator.prototype.process=function(){var a=Q.defer();return this.logger.info("[ SitemapGenerator.process ] - start ..."),this.generate().then(function(b){this.logger.info("[ SitemapGenerator.process ] - generate succes so convert it to json"),this.factory.remapSitemap(b,this.config.rules,this.config.generator.url).then(function(b){this.logger.debug("[ SitemapGenerator.process ] - the sitemap was correctly remaped"),a.resolve(b)}.bind(this)).catch(function(b){this.error("[ SitemapGenerator.process ] - an error occured when remaping sitemap, more details : ",utils.obj.inspect(b)),a.reject(b)})}.bind(this)).catch(function(b){a.reject(b)}),a.promise},module.exports=function(a){return(_.isUndefined(a)||_.isNull(a))&&(logger.warning("[ SitemapGenerator.constructor ] - Invalid logger given. Use internal logger"),a=logger),new SitemapGenerator(a)};