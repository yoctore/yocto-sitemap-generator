/* yocto-sitemap-generator - Module that generate sitemap.xml - V0.1.0 */
"use strict";function Factory(a){this.logger=a}var logger=require("yocto-logger"),_=require("lodash"),Q=require("q"),xmlParser=require("xml2json"),async=require("async"),builder=require("xmlbuilder");Factory.prototype.remapSitemap=function(a,b,c,d){var e=Q.defer(),f=[];return a=_.isString(a)?JSON.parse(xmlParser.toJson(a)):a,async.each(a.urlset.url,function(a,d){this.buildUrl(a,b,c).then(function(a){f.push(a),d()}).catch(function(){d()})}.bind(this),function(){return a.urlset.url=_.compact(f),_.isUndefined(d)||d===!1?e.resolve(a):void e.resolve(this.buildXml(a,b))}.bind(this)),e.promise},Factory.prototype.buildXml=function(a,b){var c=builder.create("urlset",{version:"1.0",encoding:"UTF-8"}),d=[{key:"xmlns",path:"xmlns"},{key:"xsi",path:"xmlns:xsi"},{key:"schemaLocation",path:"xsi:schemaLocation"}];return _.each(d,function(a){var d=_.get(b,"urlset."+a.key);_.isUndefined(d)||_.isNull(d)||_.isEmpty(d)||c.att(a.path,d)}),_.each(a.urlset.url,function(a){c.ele("url").ele(a)}),c.end({pretty:!0,indent:"  ",newline:"\n"})},Factory.prototype.buildUrl=function(a,b,c){var d=Q.defer(),e={},f=_.replace(a.loc,c,"");return async.parallel([function(a){_.each(b.exclude,function(a){f.match(new RegExp(a))&&(e=null)}),a()},function(c){_.each(b.override,function(b){f.match(new RegExp(b.regex))&&(e=_.merge(a,b.params))}),c()}],function(){!_.isNull(e)&&_.isEmpty(e)&&(e=_.merge(a,b.default.params)),d.resolve(e)}),d.promise},module.exports=function(a){return(_.isUndefined(a)||_.isNull(a))&&(logger.warning("[ Factory.constructor ] - Invalid logger given. Use internal logger"),a=logger),new Factory(a)};